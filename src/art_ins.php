<?php
class ant_in {
    public $mass;
    public $sign;

    public function analizator($id, $xy)                                    // Обработка данных в БД и вынесение вердикта какую службу вызывать
    {                                                                       // $xy - ход аппонента
        $q = 1;                                                             // Счётчик
        $xy = "$xy[0]:$xy[1]";                                              // Формируем координаты
        $bufer = null;                                                      // Буфер ....
        foreach ($this->mass as $w) {                                       // Просматриваем выборку
            $result = reader($w, 0, 'res');                                 // Узнаём резльтат игры
            $play_str = reader($w, 1, 'str');                               // Читаем строку победителя
            $player = 
            $for_play_one = $result == "1" && 
            if ( || $result == "2") {                         // ВОЗМОЖНО ОШИБКА ибо нет проверки того кто походил первым и можем выбирать игру того кто проиграл
                $string = reader($w, $id - 1, 0);                           // Если это чья то победа  считываем первый ход

                $past_step = "$string[4]:$string[6]";                       // Извлекаем xy
                if ($past_step == $xy) {                                    // Если координаты в файле и хода опонента совпадают
                    $string = reader($w, $id, 0);                           // Считываем наш ход 
                    $new_step = [$string[4], $string[6]];                   // Приводим к стандарту
                    return $new_step;                                       // Возвращаем координаты
                } else {                                                    // Если прошлый ход в файле не совпадает с ходом аппонента
                    for ($i = 0; $i < count($this->mass); $i++) {           // проходим по вссем элементам массива
                        if ($this->mass[$i] == $w) {                        // и удаляем тот у которого 
                            unset($this->mass[$i]);                         // прошлый ход не совпадает с нашим
                        }
                    }
                }
            } else {                                        
                if ($result == "0") {                                       // Если результат игры - ничья
                    $string = reader($w, $id - 1, 0);                       // считываем строку с прошлым ходом
    
                    $past_step = "$string[4]:$string[6]";                   // формируем координаты
                    if ($past_step == $xy) {                                // Если полученые кооординты равны тем что у нас
                        $string = reader($w, $id, 0);                       // считываем строку текущего хода
                        $bufer = [$string[4], $string[6]];                  // и сохраняем её в буфер
                    } else {                                                // Иначе
                        for ($i = 0; $i < count($this->mass); $i++) {       // перебираем выборку
                            if ($this->mass[$i] == $w) {                    // находим наш элемент
                                unset($this->mass[$q]);                     // и удаляем его из выборки
                                $this->mass = array_values($this->mass);    // Проводим переиндексацию
                                $q--;
                            }
                        }
                    }
                } else {
                    echo "res = $result\n";                                 // Тест
                }   
            }   
            
            if (count($mass) == ($q + 1)) { return $bufer; }                // Если мы перед концом массива
            $q++;                                                           // А вариант с победой так и не найден возвращаем буфер
        }                                                                   // Если буфер так же не найден вернём null 
    }               

                                                                            // Передать значение поля нужно                 
    public function rand_step($pole, $N)                                    // Случайный выбор координат
    {                               
        while (true) {                                                      // пока не получим результат
            $x = random_int(0, $N - 1);                                     // генерируем x
            $y = random_int(0, $N - 1);                                     // генерируем у

            if ($pole[$x][$y] == '-') {                                     // если это поле пустое 
                return [$x, $y];                                            // возвращаем координаты нашего хода
            }
        }
    }

                                                                            // Та же самая проблема с полем
    public function main($pole, $N, $xy)                                    // Управляющая ИИ конструкция
    {
        if ($id < 3) {
            $this->mass = worker($id, $xy);                                 // Получить массив из базы данных
        }
    
        $bufer = $this->analizator($id , $xy);                              // Вызвать анализатор
    
        if ($bufer == null) {
            return $this->rand_step($pole, $N);
        }                                                                   // Если анализатор вернёт NULL, Запуск рандома
        else { 
            return $bufer;                                                  // и вернуть $xy
        }
    }
}
?>